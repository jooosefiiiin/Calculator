{"ast":null,"code":"var _jsxFileName = \"/Users/josefinschonqvist/Desktop/calculator/calculator8/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Button from './components/Button';\nimport Input from './components/Input';\nimport ClearButton from './components/ClearButton';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToInput = val => {\n      this.setState({\n        input: this.state.input + val\n      });\n    };\n\n    this.addDecimal = val => {\n      //only add decimal if there is no current decimal point present in the input area\n      if (this.state.input.indexOf(\".\") === -1) {\n        this.setState({\n          input: this.state.input + val\n        });\n      }\n    };\n\n    this.addZeroToInput = val => {\n      //if this.state.input is not empty then add zero\n      if (this.state.input !== \"\") {\n        this.setState({\n          input: this.state.input + val\n        });\n      }\n    };\n\n    this.clearInput = () => {\n      this.setState({\n        input: \"\"\n      });\n    };\n\n    this.add = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"plus\";\n    };\n\n    this.subtract = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"subtract\";\n    };\n\n    this.multiply = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"multiply\";\n    };\n\n    this.divide = () => {\n      this.state.previousNumber = this.state.input;\n      this.setState({\n        input: \"\"\n      });\n      this.state.operator = \"divide\";\n    };\n\n    this.evaluate = () => {\n      this.state.currentNumber = this.state.input; // program to convert decimal to binary\n      // take input\n\n      let number = parseInt(prompt('Enter a decimal number: ')); // convert to binary\n\n      let result = number.toString(2);\n\n      if (this.state.operator == \"plus\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) + parseInt(this.state.currentNumber)\n        });\n      } else if (this.state.operator == \"subtract\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) - parseInt(this.state.currentNumber)\n        });\n      } else if (this.state.operator == \"multiply\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) * parseInt(this.state.currentNumber)\n        });\n      } else if (this.state.operator == \"divide\") {\n        this.setState({\n          input: parseInt(this.state.previousNumber) / parseInt(this.state.currentNumber)\n        });\n      }\n    };\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\"\n    };\n  }\n\n  render() {\n    console.log('Binary:' + ' ' + result);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clac-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }\n    }, this.state.input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, \"8\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"9\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.divide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.multiply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"+\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addDecimal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, \".\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.addZeroToInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, \"0\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.evaluate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, \"=\"), /*#__PURE__*/React.createElement(Button, {\n      handleClick: this.subtract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ClearButton, {\n      handleClear: this.clearInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"Clear\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josefinschonqvist/Desktop/calculator/calculator8/src/App.js"],"names":["React","Component","Button","Input","ClearButton","App","constructor","props","addToInput","val","setState","input","state","addDecimal","indexOf","addZeroToInput","clearInput","add","previousNumber","operator","subtract","multiply","divide","evaluate","currentNumber","number","parseInt","prompt","result","toString","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Button from './components/Button';\nimport Input from './components/Input'\nimport ClearButton from './components/ClearButton';\n\nclass App extends Component{\nconstructor(props){\n  super(props);\n\n  this.state = {\n    input: \"\",\n    previousNumber: \"\",\n    currentNumber: \"\",\n    operator: \"\",\n  }\n}\n\n\naddToInput = val => {\n  this.setState({ input: this.state.input + val });\n  \n};\n\naddDecimal = val => {\n  //only add decimal if there is no current decimal point present in the input area\n  if (this.state.input.indexOf(\".\") === -1) {\n    this.setState({ input: this.state.input + val });\n  }\n};\n\naddZeroToInput = val => {\n  //if this.state.input is not empty then add zero\n  if (this.state.input !== \"\") {\n    this.setState({ input: this.state.input + val});\n  }\n};\n\nclearInput = () => {\n  this.setState({ input: \"\"})\n};\n\nadd = () => {\n  this.state.previousNumber = this.state.input;\n  this.setState({ input: \"\" });\n  this.state.operator = \"plus\";\n};\n\nsubtract = () => {\n  this.state.previousNumber = this.state.input;\n  this.setState({ input: \"\" });\n  this.state.operator = \"subtract\";\n};\n\nmultiply = () => {\n  this.state.previousNumber = this.state.input;\n  this.setState({ input: \"\" });\n  this.state.operator = \"multiply\";\n};\n\ndivide = () => {\n  this.state.previousNumber = this.state.input;\n  this.setState({ input: \"\" });\n  this.state.operator = \"divide\";\n};\n\nevaluate = () => {\n  this.state.currentNumber = this.state.input;\n// program to convert decimal to binary\n\n// take input\nlet number = parseInt(prompt('Enter a decimal number: '));\n\n// convert to binary\nlet result = number.toString(2);\n  if (this.state.operator == \"plus\") {\n    this.setState({\n      input: parseInt(this.state.previousNumber) +\n      parseInt(this.state.currentNumber)\n    });\n\n  }else if (this.state.operator == \"subtract\") {\n      this.setState({\n        input: parseInt(this.state.previousNumber) -\n        parseInt(this.state.currentNumber)\n      });\n    }else if (this.state.operator == \"multiply\") {\n      this.setState({\n        input: parseInt(this.state.previousNumber) *\n        parseInt(this.state.currentNumber)\n      });\n    }else if (this.state.operator == \"divide\") {\n      this.setState({\n        input: parseInt(this.state.previousNumber) /\n        parseInt(this.state.currentNumber)\n      });\n  }\n};\n\n  render(){console.log('Binary:' + ' ' + result);\n    return (\n    <div className=\"App\">\n    <div className=\"clac-wrapper\">\n      <div className=\"row\">\n    <Input>{this.state.input}</Input>\n      </div>\n      <div className=\"row\">\n        <Button handleClick={this.addToInput}>7</Button>\n        <Button handleClick={this.addToInput}>8</Button>\n        <Button handleClick={this.addToInput}>9</Button>\n        <Button handleClick={this.divide}>/</Button>\n      </div>\n      <div className=\"row\">\n        <Button handleClick={this.addToInput}>4</Button>\n        <Button handleClick={this.addToInput}>5</Button>\n        <Button handleClick={this.addToInput}>6</Button>\n        <Button handleClick={this.multiply}>*</Button>\n      </div>\n      <div className=\"row\">\n        <Button handleClick={this.addToInput}>1</Button>\n        <Button handleClick={this.addToInput}>2</Button>\n        <Button handleClick={this.addToInput}>3</Button>\n        <Button handleClick={this.add}>+</Button>\n      </div>\n      <div className=\"row\">\n        <Button handleClick={this.addDecimal}>.</Button>\n        <Button handleClick={this.addZeroToInput}>0</Button>\n        <Button handleClick={this.evaluate}>=</Button>\n        <Button handleClick={this.subtract}>-</Button>\n      </div>\n      <div className=\"row\">\n              <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n     </div>\n    </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}